In vague order of importance.

High Prio
-- Formal object for lines?
    Search for everything that calls setcell/getcell/grid reference, and see if it makes it better or worse.
-- Nightly builds? https://semaphoreci.com/jbzdarkid/jbzdarkid-github-io/settings

Editor
-- Look into "cancel" solving? Might be hard, since I'm on main thread.
    Hard, look into old worker code
-- Better UI for "draggable edge"
-- Crayons could be colored in, maybe.
-- At the full drag limit, start points can shift by 0.5 cells
-- Decide if shape chooser should pop over the right buttons or not.

Tracing
-- Tracing down against walls and gap-2 is awkward
    The game is awful at this too.
-- "inRawBbox" should potentially finish drawing the path, but leave the cursor as-is
    If it makes it easier, rm cursor when finishing

Background validation
-- Replace XMLHttpRequest with Fetch?
-- Preview images for puzzles (meta:og tag) [WIP]
    Still need to fix chrome on the server (phantomjs is deprecated)
    Tried: js2py -- requires ES5.1 (no objects, for..of, requires semis)
    Tried: PhantomJS -- still deprecated, still obnoxious
    Tried: Firefox -- Promising, but couldn't get the executable to launch (same as Chrome)
    Tried: pyppeteer -- Requires async, which requires the main loop, which Flask owns.
-- Modify the validate_template to instead have an input box where I can paste the solution json (to be rendered). That way, I don't have to temporarily commit a puzzle and then back it out again.

Server
-- A whole bunch of UI for browsing puzzles
-- Save puzzle title separately for meta:title?
-- Start versioning JS? That way caching works and doesn't shoot me in the foot.
-- Signin?
-- Telemetry dashboard
    Probably password protect this? Use Flask-BasicAuth w/ RDS password (for simplicity)
    Consider changing UUIDType to just be a string -- it's pain to read.

Low Prio
-- Fix generation colors / general improvements to random puzzles
-- Favicon still needs improving
    RM the dot, it's invisible
    Figure out something better for the tri (star?)
-- Consider moving (0, 0) to something large like (1000, 1000) to improve wraparound perf
-- Hide solution (puzzleData) from global scope
-- JS supports 'format strings', via `foo ${bar}`
    Too modern? Should check avail on my target platforms, specifically mobile
-- change all divs to auto-centering? It's all I seem to use them for rn
    Maybe have a class="centered"
-- transform: scale(2) doesn't work on safari?
    Checkboxes are terrible. Maybe write my own?
-- random generation for challenges
    copy game RNG should be easy (now that I do it myself)
    use trace callback func
    maze can be 'click to reveal' like memory card game
    should play the music if I can
-- Animation for start-grow isn't playing for primary line
-- Some kind of release story
    Either auto-upload on code push, or a script to make a zip file
    Should also start minifying code eventually.

