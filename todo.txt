In vague order of importance.

- Tracing/etc
-- _changePos is modifying data.x on pillar wrap
-- Pillar wrap should be relative
-- PathSegtment should own cursor movement
-- Symcursor should exist on data for simplicity / prevent dupes
-- bboxDebug should be owned by bbox, and only created when setting is enabled
--- and only updated in shift() when object exists
-- Readme should explain the different types of positional tracking in trace
-- Once the above is done, I should ensure/cleanup which functions use which kinds of tracking.
   Ideally this simplifies tracing a bit too, though main loop might stay big 

- Rich line data -> Done
-- Formal object, maybe?
- Better UI for "draggable edge" (editor)
- Nightly builds again? https://semaphoreci.com/jbzdarkid/jbzdarkid-github-io/settings

- Server
-- A whole bunch of UI for browsing puzzles
-- Signin?
-- Preview images for puzzles (meta:og tag)
    Create IAM for S3 access
    Somehow wire S3 access token into python
    Use S3 API  https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html

    Kick off a background task? -> Tie to puzzle creation
    Use legacy/send_email.py to generate images (with selenium/phantomjs)
    This is also where I should validate the solution (client-side provided, always) to prevent cheesing.
-- Telemetry dashboard
    Probably password protect this? Use Flask-BasicAuth w/ RDS password (for simplicity)

- Fix generation colors / general improvements to random puzzles
- Favicon still needs improving
-- RM the dot, it's invisible
-- Figure out something better for the tri (star?)
- Consider moving (0, 0) to something large like (1000, 1000) to improve wraparound perf
- Editor dragging has deadzone -- there should be a magic pixel (or they should be much closer.)
- Hide solution (puzzleData) from global scope
- Finish documenting files (at least the engine, cmon)
-- In fact, I think the engine is all that needs documenting, other files are self-documenting and not that complex.
- Any time I pass (x, y) as parameters, I should probably pass {'x':x, 'y':y}
-- Risky, means pass-by-reference
- JS supports 'format strings', via `foo ${bar}`
-- Too modern? Should check avail on my target platforms, specifically mobile
- Add "title" to editor buttons
- Tracing down against walls and gap-2 is awkward

!- Small things / Bugs
- What uses getRotations? Why do we need rot=null?
- Solve with pillars is slow, maybe increase warning threshold / disable in play mode?
- Shape chooser is not centered
- change all divs to auto-centering? It's all I seem to use them for rn
-- Maybe have a class="centered"
- transform: scale(2) doesn't work on safari?
-- Checkboxes are terrible. Maybe write my own?
- Crayons could be colored in, maybe.
